c
name
c
Score.new
params
c
@recommendable
params
c
params
c
@js_action
@recommendable
params
-#         setting
-#         = material_icon(@platform.icon, 'sm')
-#         New
-#       = link_to new_setting_path(platform_id: @platform.id), class: 'nav-link', remote: true do
-#     %li.nav-item
-#         -# = active_link_to material_icon(platform.icon, 'lg'), platform
-#       %li.nav-item
-#     - @platforms.each do |platform|
-#   %ul.nav.nav-tabs
-# .card-body
c
record.class.name.demodulize.class
record.class.name.demodulize
record.class
record
c
@recommendable.class.name.demodulize.downcase
@recommendable.class.name.demodulize
@recommendable.class.name
@recommendable.class
@recommendable
q
@recommendable
c
@recommendable
c
recommendable_params[:recommendable_class].classify.constantize
recommendable_params[:recommendable_class]
recommendable_params
c
@recommendable
recommendable_params
c
recommendable_params
params
c
params
q
params
c
params
CloakPolicy::Platform.find(2)
CloakPolicy::Platform.find(2)(
params
c
exit
setting_params
setting_params["row_order_position"] = 123
setting_params["row_order_position"]
setting_params
@setting
c
exit
c
CloakPolicy::Setting.pluck(:name)
CloakPolicy.pluck(:name)
Setting.
@setting.errors.messages
@setting.errors
@setting.save
@setting.valid?
@setting
request.format
@setting.platform
@setting.valid?
@setting
setting_params
params
