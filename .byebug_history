q
c
exit
q
intent_options_count(vector)
q
subvectors.first.all_scored_settings
subvectors.first
subvectors
c
q
array.nil?
c
self
c
scored_settings
self
array
c
q
self
array
q
sv.subvectors
sv
q
array + scored_settings
array
scored_settings
q
sv.subvectors
sv.scored_settings.empty?
sv.scored_settings.count
sv.scored_settings
sv.settings
sv
array
q
sv
subvectors
scored_subvectors
sv
array
c
array
c
array
q
vector
q
self.scores
self
vector
c
array.empty?
c
array.empty?
array
q
s
q
c
scores
self
vector
exit
q
c
q
vectors(:geolocation).scorables
vectors(:geolocation).settings
scores(:four).scorable
scores(:four).vector.name
scores(:four)
q
record.scores
record
score
q
c
self.class.name
c
self.class.name
c
self.class.name
c
self.class.name
q
c
self.class.name
self.class
q
c
self.scores.where(vector_id: self.id)
self.scores
vector.id
self.id
vector
q
vector
record
q
vector
c
vector
record
score
q
Vector.find_by(name: vector)
q
vector.class.name
vector
q
vector
vectir
q
y
q
scores.where(vector_id: vector.id).first.nil?
scores.where(vector_id: vector.id).first
scores.where(vector_id: vector.id)
vector.id
vector
scores
self
vector
q
vector
self.scores.first.vector_id
self.scores.first
self.id
self
q
vector
self.scores
self
q
self.scores
self
q
record
unscored_vector
c
vector
q
self.id
self.scores.first.vector_id
c
self.vector_id
self.id
self.scores.first.scorable_id
self.scores.first
self.id
vector.name
self.name
self
self.naem
c
self.scores.count
self.id
self.scores.first.vector_id
self.scores
self.id
vector.id
scores.where(vector_id: vector.id)
self.id
self.scores.first.scorable_id
self.scores.first.scorabl_id
self.scores.count
self.scores
q
self.id
vector.id
vector
self.scores
vector
vector.scores.where(vector: vector)
vector
c
vector.class
vector.to_s.capitalize
vector.to_s
vector
scores
self
q
self.class.to_s.match? 'Vector'
self.class.to_s.match? 'vector'
self.class.to_s
self.class
self
q
vector
self
q
vector.subvectors.count == 1
vector.subvectors.count
vector.subvectors_count
vector
q
exit
CloakPolicy::Vectorc
CloakPolicy::Vector
Vector.count
Vector.size
Vector.all
Vector.all.count
Vector.count
Vector
Vector.count
Vector.where('subvectors.count = ?', 0)
Vector
Vector.where(parent_ids.include? 'id')
q
Vector.where(parent_ids.include? 'id')
qVector.where(parent_ids.include? 'id')
q
Vector.last.scores.last
Vector.last.scores.last.scorable
Vector.last
newvector
q
c
q
newvector
c
q
Score.last
CloakPolicy::Vector.last.scores
CloakPolicy::Vector.last
newvector
c
self.scores.last.vector_id
self.scores.vector_id
self.id
self.scores
self
score.valid?
score.save
score
c
q
c
q
score.scorable
score.vector
score = vector.scores.last
vector = Vector.last 
Vector.find(Vector.last.scores.last.vector_id)
Vector.last.scores.last.vector_id
Vector.last.scores.last
Vector.last.parent_id
Vector.last
Vector.last.scores.last
Vector.last.scores
Vector.last
