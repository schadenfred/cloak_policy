.tab-pane.fade{ class: active_for_dev("manage"), id: "manage", "aria-labelledby" => "manage-tab", :role => "tabpanel"}
  .row
    .col-4
      .card
        = simple_form_for(recommendation) do |f|
          .card-header
            Attributes
          .card-body
            = f.error_notification
            = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
            = f.input :name
            = f.input :profile, collection: profiles, include_blank: false
            = f.input :use_case, collection: use_cases, include_blank: false
            = f.input :description, as: :text, input_html: { rows: 5 }
            = f.input :benefit, input_html: { rows: 5 }
            - if recommendation.benefit?
              .container
                = markdown(recommendation.benefit)
          .card-footer
            = f.submit class: "btn btn-primary btn-block"

    .col-4
      .card
        .card-header
          Preferences
        .card-body
          - Preference.all.each do |preference|
            = form_with scope: :categories_categorizable, url: categories_categorizables_path, method: :post, remote: true, data: { recommendation_id: recommendation.id, preference_id: preference.id} do |form|
              - checked = recommendation.preferences.include?(preference) ? true : false
              .form-group
                .form-check
                  .custom-control.custom-checkbox.custom-control-inline

                    = form.check_box preference.name, checked: checked, class: 'custom-control-input', data: { remote: true, method: :post, url: categories_categorizables_url(recommendation: { preference_id: preference.id, recommendation_id: recommendation.id} )}
                    = form.label preference.name, class: 'custom-control-label custom-control-color' do
                      = material_icon(preference.icon, 'lg')
                      = preference.name

    .col-4
      .card
        .card-header
          Platforms
        = simple_form_for(recommendation) do |f|
          .card-body
            = f.collection_check_boxes(:platform_ids, Platform.recommendable, :id, :name) do |checkbox|
              .row
                .col
                  .form-check
                    .custom-control.custom-checkbox.custom-control-inline
                      = checkbox.check_box class: 'custom-control-input'
                      = checkbox.label class: 'custom-control-label custom-control-color' do
                        = material_icon(checkbox.object.icon, 'lg')
                        = checkbox.text
                .col
                  - if recommendation.recommends?(checkbox.object)
                    = launch_btn(recommendation.id, {svc_id: checkbox.object.id, text: 'Launch', html_class: "btn btn-primary btn-block"})
      -#       -# = f.association :platforms, collection: Platform.recommendable, label: '', as: :check_boxes, checked: recommendation.selected_platforms.pluck(:id), include_blank: false
      -# .col-sm-4

    -# .row
    -#   .col= f.button :submit, class: "btn btn-primary btn-lg"

