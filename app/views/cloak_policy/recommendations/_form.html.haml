= simple_form_for([:admin, @recommendation]) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
  .row
    .col-sm-8
      .card
        .card-header
          Attributes
        .card-body
          = f.input :housable
          = f.input :name
          = f.input :description, as: :text
          = f.button :submit, class: "btn btn-primary btn-lg"
    .col-sm-2
      .card
        .card-header
          Platforms
        .card-body
          = f.association :platforms, collection: Platform.recommendable, label: '', as: :check_boxes, checked: @recommendation.selected_platforms.pluck(:id), include_blank: false
    .col-sm-2
      .card
        .card-header.text-center
          Launch
        .card-body
          - @recommendation.launchable.each do |launchable|
            = launch_btn(@recommendation.id, {svc_id: launchable.id, text: launchable.name, html_class: "btn-block"})
.card
  .card-header.card-header-divider
    Platforms
  .card-body
    - @recommendation.recommendables.try(:each) do |platform|
      .card
        .card-header
          %i{class: platform.icon}
          = platform.name.capitalize
          - if @recommendation.launchable.include? platform
            = launch_btn(@recommendation.id, {svc_id: platform.id, html_class: "btn-sm"})
        .card-body
          - platform.recommendables.in_groups_of(4, false) do |group|
            .card-deck
              - group.each do |setting|
                .col-sm-3
                  .card.h-100{:style => "width: 18rem;"}
                    .card-header
                      = setting.name
                    .card-body{id: "setting-#{setting.id}"}
                      = simple_form_for([:admin, @recommendation]) do |f|
                        - setting.recommendable_choices.each do |sc|
                          - checked = @recommendation.chosens.pluck(:choice_id).include?(sc.id)
                          .radio{id: "choice-#{sc.id}"}
                            = f.radio_button :choice_ids, sc.id, options = {multiple: true, checked: checked, data: {remote: true, method: :patch, url: :choose}}
                            = f.label sc.name
                    .card-footer
                      - current_choice = @recommendation.choice_for(setting)
                      - if current_choice.nil?
                        No choice selected
                      - else
                        = link_to 'Launch',
                          recommendation_setting_launch_path(@recommendation, setting),
                          remote: true
