.content
  .wrapper
    %canvas#chart-0
  -# .toolbar
    %button#randomize Randomize
    %button#addDataset Add Dataset
    %button#removeDataset Remove Dataset
    %button#togglePieDoughnut Toggle Doughnut View
-# .card-body

  -# %ul#platformsTab.nav.nav-tabs{:role => "tablist"}
  -#   %li.nav-item
  -#     %a#scoring-tab.nav-link.active{"aria-controls" => "scoring", "aria-selected" => "false", "data-toggle" => "tab", :href => "#scoring", :role => "tab"} scoring
  -#   %li.nav-item
  -#     %a#attributes-tab.nav-link{"aria-controls" => "attributes", "aria-selected" => "true", "data-toggle" => "tab", :href => "#attributes", :role => "tab"} Attributes
  -# #platformsTabContent.tab-content
    #scoring.tab-pane.fade.show.active{"aria-labelledby" => "scoring-tab", :role => "tabpanel"}
      .content
        .wrapper
          %canvas#chart-0

        .toolbar
          -# %button#randomize Randomize
          -# %button#addDataset Add Dataset
          -# %button#removeDataset Remove Dataset
          -# %button#togglePieDoughnut Toggle Doughnut View
      -# #polarChart
      -#   %canvas{ id: "chart-0", data: { "chart-type" => "doughnut", "label" => 'Vector weights',  labels: @vectors.pluck(:name), scores: []}, :height => "300", :width => "400"}
      -# -# %button#randomizeData Randomize Data
      -# -# %button#addDataset Add Dataset
      -# -# %button#removeDataset Remove Dataset

      -# .toolbar
      -#   %button{:onclick => "randomize()"} Randomize
      -#   %button{:onclick => "addDataset()"} Add Dataset
      -#   %button{:onclick => "removeDataset()"} Remove Dataset
      -#   %button{:onclick => "togglePieDoughnut()"} Toggle Doughnut View
      -# - score = scorable.scores.find_by(vector_id: vector.id)
      -# -# = scorable.scores.count
      -# -# = Score.count
      -# -# = Score.first.vector.name
      -# -# = Score.first.scorable.name
      -# -# = vector.scored.count
      -# = vector.name
      -# |
      -# = vector.scored.count
      -# |
      -# = scorable.name
      -# |
      -# = scorable.scores.try(:first).try(:points)
      -# |
      -# = scorable.points_for(vector)
      -# |
      -# = scorable.scores.count
      -# |

      -# - if score
      -#   .row
      -#     .col-9
      -#       = form_with model: score, url: score_path(id: score.id) do |f|
      -#         = f.number_field :points, class: 'form-control'
      -#     .col-1
      -#       = link_to score, method: :delete, data: { confirm: 'Are you sure?' } do
      -#         = material_icon("delete", "", "red")
      -# - else
      -#   = form_with model: CloakPolicy::Score.new, url: scores_path do |f|
      -#     = f.hidden_field :scorable_type, value: 'CloakPolicy::Vector'
      -#     = f.hidden_field :scorable_id, value: scorable.id
      -#     = f.hidden_field :vector_id, value: @vector.id
      -#     = f.submit "Score it", class: 'btn btn-primary'
    #attributes.tab-pane.fade{"aria-labelledby" => "attributes-tab", :role => "tabpanel"}
      %table.table.table-responsive.table-borderless
        %thead
          %tr
            %th name
            %th description
            %th
            %th
          %tbody
            - CloakPolicy::Vector.top_level.each do |vector|
              = render 'vector', vector: vector



      .card-footer.bg-white
        = link_to 'New top level vector', new_vector_path
